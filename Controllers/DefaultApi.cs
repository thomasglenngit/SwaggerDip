/*
 * GoApi
 *
 * our first one
 *
 * OpenAPI spec version: 1.0.1-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// Returns a user by ID.
        /// </summary>
        /// <param name="userId">the ID of the user to return.</param>
        /// <response code="200">Successful response</response>
        /// <response code="400">The specified user ID is invalid (e.g. not a number)</response>
        /// <response code="404">A user with the specified ID was not found</response>
        [HttpGet]
        [Route("/api/Sample/users/{userId}")]
        [ValidateModelState]
        [SwaggerOperation("UsersUserIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Successful response")]
        public virtual IActionResult UsersUserIdGet([FromRoute][Required]int? userId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"name\" : \"name\",\n  \"id\" : 0\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
                        : default(InlineResponse200);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
